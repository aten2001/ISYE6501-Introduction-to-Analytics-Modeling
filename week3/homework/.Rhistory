test <- data.frame(   M = 14.0,
So = 0,
Ed = 10.0,
Po1 = 12.0,
Po2 = 15.5,
LF = 0.640,
Pop = 150,
NW = 1.1,
U1 = 0.120,
U2 = 3.6,
Wealth = 3200,
Ineq = 20.1,
Prob = 0.04,
Time = 39.0,
)
test <- data.frame(   M = 14.0,
So = 0,
Ed = 10.0,
Po1 = 12.0,
Po2 = 15.5,
LF = 0.640,
M.F = 94.0 ,
Pop = 150,
NW = 1.1,
U1 = 0.120,
U2 = 3.6,
Wealth = 3200,
Ineq = 20.1,
Prob = 0.04,
Time = 39.0,
)
test <- data.frame(   M = 14.0,
So = 0,
Ed = 10.0,
Po1 = 12.0,
Po2 = 15.5,
LF = 0.640,
M.F = 94.0 ,
Pop = 150,
NW = 1.1,
U1 = 0.120,
U2 = 3.6,
Wealth = 3200,
Ineq = 20.1,
Prob = 0.04,
Time = 39.0
)
predict(model,test)
HoltWinters(weather)
knitr::opts_chunk$set(echo = TRUE)
setwd("D:/ernie/self-study/GTxMicroMasters/Introduction to Analytics Modeling/week3/homework")
library(magrittr)
library(tidyverse)
library(lubridate)
library(corrplot)
library(leaps)
weather <- data.frame(read.table("temps.txt" , header = T))%>%
select(.,- DAY) %>%
unlist()%>%
as.vector()%>%
ts(start = 1996 , end = 2015 , frequency = 100)
plot(weather)
```{r , echo =FALSE}
```{r , include = FALSE , echo = TRUE}
knitr::opts_chunk$set(echo = TRUE)
setwd("D:/ernie/self-study/GTxMicroMasters/Introduction to Analytics Modeling/week3/homework")
library(magrittr)
library(tidyverse)
library(lubridate)
library(corrplot)
library(leaps)
weather <- data.frame(read.table("temps.txt" , header = T))%>%
select(.,- DAY) %>%
unlist()%>%
as.vector()%>%
ts(start = 1996 , end = 2015 , frequency = 100)
plot(weather)
summary(model)
predict(model,test)
View(crime)
rm(list = ls())
function return_result(a,b){
if (b == "mean"){
output <- mean(a)
}if(b == "sd"){
outupt <- sd(b)
}
}
return_result <-function (a,b){
if (b == "mean"){
output <- mean(a)
}if(b == "sd"){
outupt <- sd(b)
}
}
return_result <- function (a,b){
if (b == "mean"){
output <- mean(a)
}if(b == "sd"){
outupt <- sd(b)
}
}
return_result <- function (a,b){
if (b == "mean"){
output <- mean(a)
}if(b == "sd"){
outupt <- sd(b)
}
}
outupt <- sd(a)
return_result <- function (a,b){
if (b == "mean"){
output <- mean(a)
}if(b == "sd"){
outupt <- sd(a)
}
}
return_result <- function (a,b){
if (b == "mean"){
output <- mean(a)
}if(b == "sd"){
outupt <- sd(a)
}
}
return_result <- function (data , cal){
if (cal == "mean"){
output <- mean(data)
}if(cal == "sd"){
outupt <- sd(data)
}
}
return_result <- function (data , cal){
if (cal == "mean"){
output <- as.numeric(mean(data))
}if(cal == "sd"){
outupt <- as.numeric(sd(data))
}
}
return(a*b)
return_result <- function(a,b){
return(a*b)
}
return_result <- function(a,b){
if (b == "mean"){
output <- mean(a)
}
}
return_result <- function(df,calc){
if (calc == "mean"){
output <- mean(df)
}if(calc == "sd"){
output <- sd(df)
}
}
return_result <- function(df,calc){
if (calc == "mean"){
output <- mean(df)
}if(calc == "sd"){
output <- sd(df)
}
}
#output <- sd(df)
}
return_result <- function(df,calc){
if (calc == "mean"){
output <- mean(df)
}if(calc == "sd"){
type(df)
#output <- sd(df)
}
}
if (calc == "mean"){
output <- mean(df)
}
return_result <- function(df,calc){
if (calc == "mean"){
output <- mean(df)
}
}
View(return_result)
return (sd(df))
return (type(sd(df)))
return_result <- function(df,calc){
if (calc == "mean"){
output <- mean(df)
}
return (type(sd(df)))
}
return_result(1, mean)
return_result <- function(df,calc){
if (calc == "mean"){
output <- mean(df)
}
return (as.double(sd(df)))
}
return_result <- function(df,calc){
if (calc == "mean"){
output <- mean(df)
}if (calc == "sd"){
output <-  as.double(sd(df))
}
return (output)
}
return_result <- function(df,calc){
if (calc == "mean"){
output <- mean(df)
}else if (calc == "sd"){
output <-  as.double(sd(df))
}
return (output)
}
result_mean <- vector[1:100]
result_mean <- data.frame(matrix(nrow = 100 ,0))
View(result_mean)
help(data.frame)
colnames(result_mean)<- "mean"
View(result_mean)
result <- data.frame(matrix(nrow = 100 , ncol = 2,0) )
rm(result_mean)
View(result)
colnames(result)<- c("mean","SD")
View(result)
help(rnorm)
rnorm(3,4,5)
rnorm(10,4,5)
View(result)
for (i in length(samplesize_vec)){
population_data <- rnorm(i , mean = 6, sd = 4)
result[i,1] <- return_result(population_data, mean)
result[i,2] <- return_result(population_data, sd)
}
#step 2: creating for loop to run over different sample size
samplesize_vec = seq(from = 100, to = 100000, by = 100)
result <- data.frame(matrix(nrow = 100 , ncol = 2,0) )
colnames(result)<- c("mean","SD")
for (i in length(samplesize_vec)){
population_data <- rnorm(i , mean = 6, sd = 4)
result[i,1] <- return_result(population_data, mean)
result[i,2] <- return_result(population_data, sd)
}
View(result)
#step 1: creating a function which returns the sd or mean of data
return_result <- function(df,calc){
if (calc == "mean"){
output <- mean(df)
}else if (calc == "sd"){
output <-  as.double(sd(df))
}
return (output)
}
#step 1: creating a function which returns the sd or mean of data
return_result <- function(df,calc){
if (calc == mean){
output <- mean(df)
}else if (calc == sd){
output <-  as.double(sd(df))
}
return (output)
}
for (i in length(samplesize_vec)){
population_data <- rnorm(i , mean = 6, sd = 4)
result[i,1] <- return_result(population_data, mean)
result[i,2] <- return_result(population_data, sd)
}
for (i in length(samplesize_vec)){
population_data <- rnorm(i , mean = 6, sd = 4)
result[i,1] <- return_result(population_data, "mean")
result[i,2] <- return_result(population_data, "sd")
}
for (i in length(samplesize_vec)){
population_data <- rnorm(i , mean = 6, sd = 4)
result[i,1] <- mean(population_data)
#return_result(population_data, "mean")
result[i,2] <- sd(population_data)
#return_result(population_data, "sd")
}
View(result)
for (i in length(samplesize_vec)){
print(i)
# population_data <- rnorm(i , mean = 6, sd = 4)
# result[i,1] <- mean(population_data)
#   #return_result(population_data, "mean")
# result[i,2] <- sd(population_data)
#   #return_result(population_data, "sd")
}
for (i in samplesize_vec){
print(i)
# population_data <- rnorm(i , mean = 6, sd = 4)
# result[i,1] <- mean(population_data)
#   #return_result(population_data, "mean")
# result[i,2] <- sd(population_data)
#   #return_result(population_data, "sd")
}
#step 2: creating for loop to run over different sample size
samplesize_vec = seq(from = 100, to = 100000, by = 100)
result <- data.frame(matrix(nrow = 100 , ncol = 2,0) )
colnames(result)<- c("mean","SD")
set.seed(64)
for (i in samplesize_vec){
population_data <- rnorm(i , mean = 6, sd = 4)
result[i,1] <- mean(population_data)
#return_result(population_data, "mean")
result[i,2] <- sd(population_data)
#return_result(population_data, "sd")
}
View(result)
View(result)
View(result)
#step 2: creating for loop to run over different sample size
samplesize_vec = seq(from = 100, to = 100000, by = 100)
result <- data.frame(matrix(nrow = 100 , ncol = 2,0) )
colnames(result)<- c("mean","SD")
set.seed(64)
rm(population_data)
#step 2: creating for loop to run over different sample size
samplesize_vec = seq(from = 100, to = 100000, by = 1000)
result <- data.frame(matrix(nrow = 1000 , ncol = 2,0) )
for (i in samplesize_vec){
print(i)
#sample_data <- rnorm(i , mean = 6, sd = 4)
}
result <- data.frame(matrix(nrow = 100 , ncol = 2,0) )
samplesize_vec[1]
samplesize_vec[2]
for (i in length(samplesize_vec)){
print(i)
#sample_data <- rnorm(i , mean = 6, sd = 4)
#result[]
}
for (i in 1:length(samplesize_vec)){
print(i)
#sample_data <- rnorm(i , mean = 6, sd = 4)
#result[]
}
#step 2: creating for loop to run over different sample size
samplesize_vec = seq(from = 100, to = 100000, by = 1000)
result <- data.frame(matrix(nrow = 100 , ncol = 2,0) )
set.seed(64)
samplesize_vec[2]
for (i in 1:length(samplesize_vec)){
print(i)
sample_data <- rnorm(i , mean = 6, sd = 4)
result[i,1] <- mean(sample_data)
result[i,2] <- sd(sample_data)
}
print(head(result))
colnames(result)<- c("mean","SD")
set.seed(64)
for (i in 1:length(samplesize_vec)){
#print(i)
sample_data <- rnorm(i , mean = 6, sd = 4)
result[i,1] <- mean(sample_data)
result[i,2] <- sd(sample_data)
}
View(result)
View(result)
#step3 plot
ggplot(result, y = mean) +
geom_density()
#step3 plot
ggplot(result, x = mean) +
geom_density()
#step3 plot
ggplot(result, aes(x = mean)) +
geom_density()
mean(result$mean)
ggplot(result, aes(x = SD)) +
geom_density()
summary(result$mean)
summary(result$SD)
#step3 plot
result %>%
mutate(sample_size = samplesize_vec)
ggplot(result, aes(x= samplesize_vec, y = mean)) +
geom_line()
#step3 plot
result %>%
mutate(sample_size = samplesize_vec)
#step3 plot
result <-result %>%
mutate(sample_size = samplesize_vec)
ggplot(result, aes(x= sample_size, y = mean)) +
geom_line()
ggplot(result, aes(x = sample_size)) +
geom_line()
ggplot(result, aes(x = sample_size , y = SD)) +
geom_line()
help("abline")
ggplot(result, aes(x= sample_size, y = mean)) +
geom_line()+
abline()
pl1 <-ggplot(result, aes(x= sample_size, y = mean)) +
geom_line()
pl2 <- ggplot(result, aes(x = sample_size , y = SD)) +
geom_line()
View(pl1)
pl1
+abline(6 ,0)
pl1%>%abline(6,0)
pl1%>%abline(6,0)
pl1 <-ggplot(result, aes(x= sample_size, y = mean)) +
geom_line()
abline(pl1)
plot(pl1)
plot(pl1)%>%
abline(6,0)
abline(mean(result$mean))
pl1 <-ggplot(result, aes(x= sample_size, y = mean)) +
geom_line()+abline()
pl1 + abline()
source('D:/ernie/waseda/2020春学期/Econometrics and Data Analysis using R/PS2.R', echo=TRUE)
#step 1: creating a function which returns the sd or mean of data
library(magrittr)
knitr::opts_chunk$set(echo = TRUE)
library(magrittr)
knitr::opts_chunk$set(echo = TRUE)
library(magrittr)
library(tidyverse)
set.seed(64)
for (i in 1:length(samplesize_vec)){
#print(i)
sample_data <- rnorm(i , mean = 6, sd = 4)
result[i,1] <- mean(sample_data)
result[i,2] <- sd(sample_data)
}
#Proving  the law
prove <- result
View(prove)
prove <- prove[1,] -6
View(prove)
#Proving  the law
prove <- result
prove <- (prove[,1] -6)%>%
(prove[,2]-4)
prove <- (prove[,1] -6)
#Proving  the law
prove <- result
prove_mean <- (prove[,1] -6)
prove_SD <- prove[,2]-4
prove = c(prove_mean,prove_SD,samplesize_vec)
prove = data.frame(matrix(c(prove_mean,prove_SD,samplesize_vec)))
View(prove)
prove = data.frame(matrix(ncol = 3,c(prove_mean,prove_SD,samplesize_vec)))
View(prove)
colnames(prove) <- c("sample_mean-pop_mean" , "sample_SD - Pop_mean" , "Sample size")
colnames(prove) <- c("sample_mean-pop_mean" , "sample_SD - Pop_mean" , "Sample size")
pl3 <- ggplot(prove, aes(x = sample_size , y = sample_SD - Pop_mean)) +
geom_line() +
xlab("sample_size")+
ylab("Standard deviation")+
ggtitle("SD for different sample size")
pl3
View(prove)
#Proving  the law
prove_mean <- (prove[,1] -6)
prove_SD <- prove[,2]-4
prove = data.frame(matrix(ncol = 3,c(prove_mean,prove_SD,samplesize_vec)))
#colnames(prove) <- c("sample_mean-pop_mean" , "sample_SD - Pop_mean" , "Sample size")
pl3 <- ggplot(prove, aes(x = X3 , y = X1)) +
geom_line() +
xlab("sample_size")+
ylab("Standard deviation")+
ggtitle("SD for different sample size")
pl3
#Proving  the law
prove_mean <- abs((prove[,1] -6))
prove_SD <- abs(prove[,2]-4)
prove = data.frame(matrix(ncol = 3,c(prove_mean,prove_SD,samplesize_vec)))
#colnames(prove) <- c("sample_mean-pop_mean" , "sample_SD - Pop_mean" , "Sample size")
pl3 <- ggplot(prove, aes(x = X3 , y = X1)) +
geom_line() +
xlab("sample_size")+
ylab("Standard deviation")+
ggtitle("SD for different sample size")
pl3
#colnames(prove) <- c("sample_mean-pop_mean" , "sample_SD - Pop_mean" , "Sample size")
pl3 <- ggplot(prove, aes(x = X3 , y = X1)) +
geom_line() +
xlab("sample_size")+
ylab("mean difference")+
ggtitle("mean difference for different sample size")
#Proving  the law
prove_mean <- abs((result[,1] -6))
prove_SD <- abs(result[,2]-4)
prove = data.frame(matrix(ncol = 3,c(prove_mean,prove_SD,samplesize_vec)))
#colnames(prove) <- c("sample_mean-pop_mean" , "sample_SD - Pop_mean" , "Sample size")
pl3 <- ggplot(prove, aes(x = X3 , y = X1)) +
geom_line() +
xlab("sample_size")+
ylab("mean difference")+
ggtitle("mean difference for different sample size")
pl3
#colnames(prove) <- c("sample_mean-pop_mean" , "sample_SD - Pop_mean" , "Sample size")
pl3 <- ggplot(prove, aes(x = X3 , y = X1)) +
geom_line() +
xlab("sample_size")+
ylab("mean difference")+
ggtitle("mean difference for different sample size")+
ylim(0)
#colnames(prove) <- c("sample_mean-pop_mean" , "sample_SD - Pop_mean" , "Sample size")
pl3 <- ggplot(prove, aes(x = X3 , y = X1)) +
geom_line() +
xlab("sample_size")+
ylab("mean difference")+
ggtitle("mean difference for different sample size")
pl3
pl4 <- ggplot(prove, aes(x = X3 , y = X2)) +
geom_line() +
xlab("sample_size")+
ylab("SD difference")+
ggtitle("SD difference for different sample size")
pl4
